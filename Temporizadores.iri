handler Timer1Trip;
--Declaration Section
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula
     GetNet(1,Primary,Peso);
                                  
     --Verifica si el peso esta bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo maximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
           Bajando := 1;
     end if;
         
     -- El peso esta subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(2, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(1);
          Bajando := 0;                
          -- Tension mas peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria1Min and Diferencia > Categoria1Max then
            cantCategoria1 := cantCategoria1 + 1;
            Temporizador(13, VOn, TimerOneShot, Velocidad);  
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;         

handler Timer2Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin
       --Obtiene el peso de la bascula
     GetNet(1,Primary,Peso);
                                  
     --Verifica si el peso esta bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo maximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
           Bajando := 1;
     end if;
         
     -- El peso esta subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(1, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(2);
          Bajando := 0;                
          -- Tension mas peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria1Min and Diferencia > Categoria1Max then
            cantCategoria1 := cantCategoria1 + 1;
            Temporizador(13, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer3Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 2
     GetNet(2,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(4, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(3);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria2Min and Diferencia > Categoria2Max then
            cantCategoria2 := cantCategoria2 + 1;
            Temporizador(14, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer4Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 2
     GetNet(2,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(3, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(4);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria2Min and Diferencia > Categoria2Max then
            cantCategoria2 := cantCategoria2 + 1;
            Temporizador(14, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;   

handler Timer5Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 3
     GetNet(3,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(6, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(5);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria3Min and Diferencia > Categoria3Max then
            cantCategoria3 := cantCategoria3 + 1;
            Temporizador(15, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer6Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 3
     GetNet(3,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(5, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(6);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria3Min and Diferencia > Categoria3Max then
            cantCategoria3 := cantCategoria3 + 1;
            Temporizador(15, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer7Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 4
     GetNet(4,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(8, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(7);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria4Min and Diferencia > Categoria4Max then
            cantCategoria4 := cantCategoria4 + 1;
            Temporizador(16, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer8Trip;
LecMin : real;
Peso : real;
LecMax : real; 
Diferencia : real;
begin 
     --Obtiene el peso de la bascula 4
     GetNet(4,Primary,Peso);
                                  
     --Verifica si el peso está bajando                             
     if Peso < (LecMin - 0.2) and Bajando = 0 then
          LecMin := Peso;
     --Verifica cuando el peso comienza a subir y configura el nuevo máximo
     elsif Bajando = 0 and Peso > (LecMin + 0.2) then 
          LecMax := LecMin;
          Bajando := 1;
     end if;
         
     -- El peso está subiendo    
     if Peso > (LecMax + 0.2) and Bajando = 1 then 
          LecMax := Peso;
          Temporizador(7, VOn, TimerContinuous, 1);
          
     -- En este momento el pollo ya salió     
     elsif Bajando = 1 and Peso < (LecMax - 0.2) then
          StopTimer(8);
          Bajando := 0;                
          -- Tensión más peso meta
          Diferencia := LecMax - LecMin;
          if Diferencia > Categoria4Min and Diferencia > Categoria4Max then
            cantCategoria4 := cantCategoria4 + 1;
            Temporizador(16, VOn, TimerOneShot, Velocidad); 
          end if; 
          
          LecMin := LecMax;
     end if;
   
    return;
end;

handler Timer9Trip;
--Declaration Section

begin
     ApagarPiston(1);
end;


handler Timer10Trip;
--Declaration Section

begin
     ApagarPiston(2);
end;


handler Timer11Trip;
  
begin
  ApagarPiston(3);
end;

             
handler Timer12Trip;
--Declaration Section

begin
     ApagarPiston(4);
return;
end;

handler Timer13Trip;
--Declaration Section
begin
     BotarPollo(1);
return;
end;

handler Timer14Trip;
--Declaration Section

begin
     BotarPollo(2);
return;
end;

handler Timer15Trip;
--Declaration Section

begin
     BotarPollo(3);
return;
end;

handler Timer16Trip;
--Declaration Section

begin
     BotarPollo(4);
return;

end;

handler Timer17Trip;
--Declaration Section

begin
     GuardarEnBD;
return; 
end;

handler Timer18Trip;
Peso : real;
begin
     
     GetNet(1,Primary,Peso);
     
     if Peso < (LecMin1 - 0.2) and Bajando = 0 then
          LecMin1 := Peso;
     elsif Bajando = 0 and Peso > (LecMin1 + 0.2) then
          DisplayStatus("Subiendo"); 
          LecMax1 := LecMin1;
          SetLabelText(Minimo6, RealToString(LecMin1,2,3)); 
          SetLabelText(Maximo6, RealToString(LecMax1,2,3)); 
           Bajando := 1;
     end if;
     
     if Peso > (LecMax1 + 0.2) and Bajando = 1 then 
          LecMax1 := Peso;
     elsif Bajando = 1 and Peso < (LecMax1 - 0.2) then
          Bajando := 0;  
                             
                             -- Tension mas peso meta
          if (LecMax1 - LecMin1) > (3) then
            SetLabelText(Minimo6, RealToString(LecMin1 ,2,3)); 
            SetLabelText(Maximo6, RealToString(((LecMax2 - LecMin1) - 7.5) ,2,3)); 
            GuardarPruebasEnBD;
            -- BotarPollo(3);
          end if; 
          
          DisplayStatus("Bajando");
          LecMin1 := LecMAx1;
     end if;
     
return;
end;           

handler Timer19Trip;
Peso : real;
begin 
    GetNet(Bascula,Primary,Peso);
     
     if Peso < (LecMin1 - 0.1) and Bajando = 0 then
          LecMin1 := Peso;
     elsif Bajando = 0 and Peso > (LecMin1 + 0.1) then 
          LecMax1 := LecMin1;
          Bajando := 1;
     end if;
     
     if Peso > (LecMax1 + 0.1) and Bajando = 1 then 
          LecMax1 := Peso;
     elsif Bajando = 1 and Peso < (LecMax1 - 0.1) then
          Bajando := 0;  
                             
          -- Tension mas peso meta
          if (LecMax1 - LecMin1) >= (8 + MinPrueba)  then
           
            Temporizador(9, VOn, TimerOneShot, Accion);
          
            Cantidad := Cantidad + 1;    
            PesoPrueba7 :=   (LecMax1 - LecMin1) - 8;
            SetLabelText(cant7, IntegerToString(Cantidad,4)); 
            SetLabelText(peso7, "Peso : "  + RealToString(PesoPrueba7,4,2));  
          end if; 
          
          LecMin1 := LecMax1;
     end if;
end;